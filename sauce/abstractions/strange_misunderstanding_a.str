false &&
{	strange :
	{	<misunderstanding> :: abstraction
		(	// no dimensions
			(	// parent
				$$<>[],
				{	// misunderstanding
					//TODO to_lake_
					to_string : "std::string () const", //TODO { return lake_to_string(to_lake_()); }

					add_ :# (misunderstanding :<misunderstanding>#, <misunderstanding>),
					'operator+' : "misunderstanding_a<> (misunderstanding_a<> const& misunderstanding) const { return add_(misunderstanding); }",
				}
			)
		)
	}
}