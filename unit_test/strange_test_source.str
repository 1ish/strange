(
	out := $$strange::River::out[],
	out.write"hello world\n",
	x := 3,
	s :=
	{
		'f'::function_(<strange::Number[<>,<>,<>]> a := 1000)
		(
			a*2+3*3
		),
		'Arithmetic'::creator_(T)()
		{
			'mut'::function_()
			(
				$$strange::Creature::mut[{::}]
			),
			'addition'::extraction_(<strange::Number> a, <strange::Number> b)
			(
				a+b*3
			),
			'scope'::function_()(::),
			'f':#(|::_T),
			'_m':*"_mlake",
			'v':%("vlake "+(::)),
			'c':~<strange::Thing[<C>,<>]>.cat[],
			'_mem':function_()(7)
		}
	},
	ar := $$Arithmetic[<xxx>]::mut[],
	out.write[ar.addition[2, 2].to_symbol[], "\n"],
	out.write[ar.f, "\n"],
	out.write[ar.v, "\n"],
	out.write[ar.c, "\n"],
	out.write[ar.v, "\n"],
	ar.c := "nlake",
	out.write[ar.c, "\n"],
	out.write[ar.type[], "\n"],
	out.write[ar.cat[], "\n"],
	out.write[ar.scope[], "\n"],
	y := $$f[x+1],
	z := s@['f'][y],
	z := (s@'f')[y],
	out.write[z.to_symbol[], "\n"],
	it := ["a","b","c","\n"],
	out.write it,
	x := z:.self_add,
	y.:x[100],
	out.write[y.to_symbol[], "\n"],
	{'m'::out.write}@'m'"last\n",
	out.write[s::f[1].to_symbol[], "\n"],
	y.:z:.self_add 1
)
