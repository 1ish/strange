(
	out := $$strange::River::out[],
	out.write"hello world\n",
	x := 3,
	s :=
	{
		'f'::function_(<strange::Number> a := 1000)
		(
			a+2
		),
		'Arithmetic'::
		{
			'mut'::function_()
			(
				$$strange::Creature::mut[<>]
			),
			'addition'::extraction_(<strange::Number> a, <strange::Number> b)
			(
				a+b+(|._mem[])
			),
			'f'::fixed_("lake"),			//TODO do not allow :: for attributes
			'_m':mutable_("lake"),
			'v':variable_(|._m[]),
			'c':changeable_("lake"),
			'_mem':function_()(7)
		}
	},
	ar := $$Arithmetic::mut[],
	out.write[ar.addition[2, 2].to_symbol[], "\n"],
	out.write[ar.f[], "\n"],
	out.write[ar.v[], "\n"],
	ar.c["luke"],
	out.write[ar.c[], "\n"],
	out.write[ar.v[], "\n"],
	y := $$f[x+1],
	z := (s@['f'])[y],
	z := s@'f'[y],
	out.write[z.to_symbol[], "\n"],
	it := ["a","b","c","\n"],
	out.write it,
	x := z:.self_add,
	y.:x[100],
	y.:(z:.self_add)1,
	out.write[y.to_symbol[], "\n"],
	{'m'::out.write}@'m'"last\n"
)
